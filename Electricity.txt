import java.util.*;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
public class ElectricityBoardMain {

    private Map<String, String> electricityMap;

    public Map<String, String> getElectricityMap() {
        return electricityMap;
    }

    public void setElectricityMap(Map<String, String> electricityMap) {
        this.electricityMap = electricityMap;
    }

    public int findCountOfConnectionsBasedOnTheConnectionType(String connectionType) {
        int count = 0;
        for (String type : electricityMap.values()) {
            if (type.equalsIgnoreCase(connectionType)) {
                count++;
            }
        }
        return count > 0 ? count : -1;
    }

    public List<String> findConnectionIdsBasedOnTheConnectionType(String connectionType) {
        List<String> result = new ArrayList<>();
        for (Map.Entry<String, String> entry : electricityMap.entrySet()) {
            if (entry.getValue().equalsIgnoreCase(connectionType)) {
                result.add(entry.getKey());
            }
        }
        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ElectricityBoardMain board = new ElectricityBoardMain();

        System.out.println("Enter the number of connection records to be added");
        int n = Integer.parseInt(sc.nextLine());
        Map<String, String> map = new LinkedHashMap<>();

        System.out.println("Enter the connection records(ConnectionId:Connectiontype)");
        for (int i = 0; i < n; i++) {
            String[] parts = sc.nextLine().split(":");
            if (parts.length == 2) {
                map.put(parts[0].trim(), parts[1].trim());
            }
        }

        board.setElectricityMap(map);

        System.out.println("Enter the Connection type to be searched");
        String searchType = sc.nextLine();

        int count = board.findCountOfConnectionsBasedOnTheConnectionType(searchType);
        if (count == -1) {
            System.out.println("No Connection Ids were found for " + searchType);
        } else {
            System.out.println("The count of connection Ids based on " + searchType.toUpperCase() + " are " + count);
        }

        System.out.println("Enter the Connection type to identify the Connection Ids");
        String filterType = sc.nextLine();

        List<String> ids = board.findConnectionIdsBasedOnTheConnectionType(filterType);
        if (ids.isEmpty()) {
            System.out.println("No Connection Ids were found for " + filterType);
        } else {
            System.out.println("Connection Ids based on the " + filterType.toUpperCase() + " are");
            for (String id : ids) {
                System.out.println(id);
            }
        }
    }
}
Sample Output 1:
Input:
Enter the number of connection records to be added
4
Enter the connection records(ConnectionId:Connectiontype)
ASHG2376:single
GFHJ9768:Single
HGHH9776:double
SJHY2838:Double
Enter the Connection type to be searched
SINGLE
Output:-
The count of connection Ids based on SINGLE are 2

Next Input:-
Enter the Connection type to identify the Connection Ids
DOUBLE
Output:-
Connection Ids based on the DOUBLE are
HGHH9776
SJHY2838